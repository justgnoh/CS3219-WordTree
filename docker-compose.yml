version: '3.9'

services:
  challenge:
    restart: always
    build:
      context: ./server/challenge
      dockerfile: Dockerfile.dev
    container_name: challenge_service
    volumes:
      - /app/node_modules
      - ./server/challenge:/app
    environment:
      - POSTGRES_URL=${POSTGRES_URL}
    depends_on:
      - db
    ports:
      - 5001:5000
    networks:
      - word_tree_network

  essay:
    restart: always
    build:
      context: ./server/essay
      dockerfile: Dockerfile.dev
    container_name: essay_service
    volumes:
      - /app/node_modules
      - ./server/essay:/app
    environment:
      - POSTGRES_URL=${POSTGRES_URL}
    depends_on:
      - db
    ports:
      - 5002:5000
    networks:
      - word_tree_network

  user:
    restart: always
    build:
      context: ./server/user
      dockerfile: Dockerfile.dev
    container_name: user_service
    volumes:
      - /app/node_modules
      - ./server/user:/app
    environment:
      - POSTGRES_URL=${POSTGRES_URL}
    depends_on:
      - db
    ports:
      - 5010:5000
    networks:
      - word_tree_network

  db:
    image: postgres:13-alpine
    restart: always
    container_name: word_tree_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=word_tree
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:${POSTGRES_DATA_DIR}
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - word_tree_network

  client:
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: word_tree_ui
    volumes:
      - /app/node_modules
      - ./frontend:/app
    depends_on:
      - challenge
      - essay
      - user
    ports:
      - 5003:3000
    networks:
      - word_tree_network

  # nginx:
  #   restart: always
  #   depends_on:
  #     - server
  #     - client
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile.dev
  #   container_name: bookstore_nginx
  #   ports:
  #     - 8080:80
  #   networks:
  #     - word_tree_network

networks:
  word_tree_network:
    driver: bridge

volumes:
  postgres-data:
    driver: local